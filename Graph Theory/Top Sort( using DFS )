/** Topological Sort(Using DFS)

#include<bits/stdc++.h>
typedef long long LL ;
using namespace std ;

#define DBG puts("I am here...")

LL n , m ;
vector< LL > V[100005] , res ;
bool ck[100005] ;

void DFS( LL u ){
    LL i , v , d = V[u].size() ;
    ck[u] = 1 ;
    for( i = 0 ; i < d ; i ++ ){
        v = V[u][i] ;
        if( ck[v] == 0 ){
            DFS( v ) ;
        }
    }
    res.push_back( u ) ;
}

int main(){
    LL i , j ;
    scanf("%lld %lld",&n,&m) ;
    for( i = 1 ; i <= m ; i ++ ){
        LL u , v ;
        scanf("%lld%lld",&u,&v) ;
        V[u].push_back( v ) ;
    }

    for( i = 1 ; i <= n ; i ++ ){
        if( ck[i] == 0 ) DFS( i ) ;
    }

    LL d = res.size() ;
    for( i = d - 1 ; i >= 0 ; i -- ){
        if( i < d - 1 ) printf(" ") ;
        printf("%lld",res[i]) ;
    }puts("") ;
    return 0 ;
}

/*
6 8

6 1
5 1
1 2
1 3
1 4
2 3
2 4
3 4
*/
